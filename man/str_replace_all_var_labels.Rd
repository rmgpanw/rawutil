% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/labelled.R
\name{str_replace_all_var_labels}
\alias{str_replace_all_var_labels}
\title{Update variable labels - replace a string for all variable labels.}
\usage{
str_replace_all_var_labels(df, pattern, replacement)
}
\arguments{
\item{df}{A data frame}

\item{pattern}{Pattern to look for.

The default interpretation is a regular expression, as described
in \link[stringi:about_search_regex]{stringi::stringi-search-regex}. Control options with
\code{\link[stringr:modifiers]{regex()}}.

Match a fixed string (i.e. by comparing only bytes), using
\code{\link[stringr:modifiers]{fixed()}}. This is fast, but approximate. Generally,
for matching human text, you'll want \code{\link[stringr:modifiers]{coll()}} which
respects character matching rules for the specified locale.}

\item{replacement}{A character vector of replacements. Should be either
length one, or the same length as \code{string} or \code{pattern}.
References of the form \code{\\1}, \code{\\2}, etc will be replaced with
the contents of the respective matched group (created by \code{()}).

To perform multiple replacements in each element of \code{string},
pass a named vector (\code{c(pattern1 = replacement1)}) to
\code{str_replace_all}. Alternatively, pass a function to
\code{replacement}: it will be called once for each match and its
return value will be used to replace the match.

To replace the complete string with \code{NA}, use
\code{replacement = NA_character_}.}
}
\value{
A data frame
}
\description{
Update variable labels - replace a string for all variable labels.
}
\seealso{
Other Labelled data utility functions: 
\code{\link{capitalise_first_letter_var_labels}()},
\code{\link{str_remove_from_var_labels}()}
}
\concept{Labelled data utility functions}

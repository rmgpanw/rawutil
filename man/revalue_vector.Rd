% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{revalue_vector}
\alias{revalue_vector}
\title{Revalue values in a vector}
\usage{
revalue_vector(x, dict, default_value = NULL, suppress_warnings = FALSE)
}
\arguments{
\item{x}{character. Name of column to be relabelled}

\item{dict}{a named vector. \code{names(dict)} are the 'keys' i.e. the
existing values in \code{df[[colname]]} to be replaced. These should be
unique. An error is raised if non-unique values are found in
\code{names(dict)}}

\item{default_value}{default value to use for values in \code{df[[colname]]}
that are not present in \code{names(dict)}. By default this is \code{NULL},
meaning that values not present in \code{names(dict)} will remain
unchanged.}

\item{suppress_warnings}{bool. A warning is raised if the column to be
relabelled contains values not present in \code{dict}. This message is
silenced if \code{suppress_warnings} is \code{TRUE}. Default value is
\code{FALSE}.}
}
\value{
A relabelled vector.
}
\description{
Similar idea to
\href{https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.replace.html}{pandas.replace
method} using a dictionary for the \code{value} argument. \strong{Note:} only
works with vectors that are of type numeric (including integer) or character.
}
